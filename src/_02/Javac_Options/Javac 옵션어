Javac : 자바 컴파일러

javac - .java(자바코드 소스파일) -> .class(JVM 바이트코드) 타입으로 변환시켜주는 명령어
 사용법 javac<options><source files>
    ex) javac Hello.java Greeting.java
        javac *.java (모든 확장자가 .java인 파일을 컴파일 할 수 있다.)


 옵션:
 1) -classpath:
    -classpath(cp) path(파일 절대 경로):
    컴파일 할 때 참조하는 클래스 파일들을 찾기 위해서 컴파일시 파일 경로를 지정
 2) -d:
    -d directory
        클래스 파일을 생성할 루트 디렉터리를 지정합니다.(default : 소스파일이 위치한 디렉토리에 파일 저장)
 3) -encoding:
    -encoding encoding name
     소스 파일에 사용된 문자열 인코딩을 설정합니다. (default : 플래폼의 기본적인 컨버터가 사용됩니다.)
 4) -g
    모든 디버깅 정보를 생성시킵니다.(위 옵션이 설정되어 있지 않으면 라인넘버만 생성)
    -g:none: 디버깅 정보를 전혀 생성 시키지 않습니다.
    -g:{lines, vars, source}:
    위처럼 명시적으로, 몇몇 디버깅 정보를 생성시킬수 있습니다.
    lines은 라인정보, vas는 지역변수, source는 소스 파일 정보를 나타냅니다.
 5) -nowarn:
    경고 메시지 (warning message)를 생성시키지 않습니다.
 6) -verbose:
    컴파일러와 링커가 현재 어느 소스파일이 컴파일되고 있고, 어느 파일이 링크되고 있는지 그정보를 출력합니다.
 7) -deprecation:
    소스 코드내에서, 사용되어진 deprecated API의 위치 를 출력 합니다.
 ex)
 C:\Java> javac World.java
 Note: World.java uses a deprecated API. Recompile with “-deprecation” for details
 .
 1 warning
 C:\Java> javac -deprecation World.java
 World.java:52: Note: The method java.awt.Dimension size() in class java.awt.Compon
 ent has been dejavacprecated.
 Dimension d = size();

 Note: World.java uses a deprecated API. Please consult the documentation for a be
 tter alternative.

 8) -sourcepath:
     -sourcepath 소스패스
     소스파일의 위치를 지정합니다.
 9) -target:
    -target 자바버젼
    지정된 자바버젼의 VM에서 작동 되어지도록 클래스파일을 생성 시킵니다.
 1.1
 jvm 1.1 버젼에서 호환되어질수 있는 클래스 파일생성
 1.2
 jvm 1.2 버젼에서 호환되어질수 있는 클래스 파일생성
 1.3
 jvm 1.3 버젼에서 호환되어질수 있는 클래스 파일 생성
 ex)
 javac -target 1.2 Helloworld.java

 10) -bootclasspath 패스:
    특정한 bootstrap또는 확장 클래스를 지정할수 있다.
    기본적으로, 자바컴파일러는 javac(컴파일러명령)이 설치된 플래폼의 bootstrap과 확장클래스들을 통해서, 컴파일작업을 수행하지만,
    bootclasspath 옵션을 사용하면, cross-compiling이라고 해서, 다른 자바플래폼의 bootstrap과 확장클래스들을 통해서, 컴파일 할수 있는 기능을 지원합니다.
    예를들어, javac -target 1.1 -bootclasspath jdk1.1.7/lib/classes.zip -extdirs “” OldCode.java 컴파일러에게 현재 자신의 bootstrap을 사용하지 말고,
    jdk1.1.7/lib/classes.zip bootstrap클래스들을 사용해서 컴파일 하라고 명령하는 것 입니다.
    참고로, 모바일자바에서, 모바일폰에 설정된, jvm에 맞도록, 소스코드를 컴파일하기 위해서, 주로 사용되어지는 옵션입니다.
 11) -extdirs 디렉터리:
    특정한, 확장 디렉토리를 지정한다.cross-compiling시 주로, 사용되어지는 옵션이면, 각디렉터리들은 콜론(:)에 의해서, 분리되어집니다.
    컴파일시, 기술한 디렉터리의 클래스 파일을 참조합니다.